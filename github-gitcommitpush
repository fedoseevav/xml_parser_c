#!/bin/bash
red=`tput setaf 1`
green=`tput setaf 2`
yellow=`tput setaf 3`
blue=`tput setaf 4`
magenta=`tput setaf 5`
cyan=`tput setaf 6`
white=`tput setaf 7`
reset=`tput sgr0`

dir=$(dirname "$0")
cd $dir

reponame="xml_parser_c"
user="fedoseevav"
pass=$(<../../github_apppass.txt)
scriptname=$(basename "$0")


echo ""
echo ""
echo "${yellow}Wellcome to the git-script! The constants below will be used."
echo "To edit them use text editor programm."
echo ""
echo "${white}reponame:    ${reset}$reponame"
echo "${white}user:        ${reset}$user"
echo "${white}pass:        ${reset}$pass"
echo "${white}filename:    ${reset}$scriptname"
echo "${white}directory:   ${reset}$dir"


# Check password is empty
if [ -z "$pass" ];
then
	echo ""
	echo "${red}Password not set. Please edit ${white}pass${red} constant and try again.${reset}"
	echo "${red}exiting...${reset}";
	exit 0
fi

# Shoosing an option
def_option="0"
echo ""
echo "${yellow}Shoose an option (default is 0):"
echo "${cyan}Exit                        -> ${white}0"
echo "${cyan}Only Commit                 -> ${white}1"
echo "${cyan}Only Push                   -> ${white}2"
echo "${cyan}Commit + Push               -> ${white}3${reset}"
echo "${cyan}Create github repository -> ${white}-1${reset}"
read option;

case $option in
	0)
	echo "${yellow}exiting...${reset}";
		echo ""
		echo ""
		echo ""
		echo ""
	exit 0;;	
	-1)
	# Create new repository on the bitbucket server

	echo "${cyan}curl ${yellow}-i -u ${white}$user:$pass${reset}";
	#curl  -i -u $user:$pass "https://api.bitbucket.org/2.0/repositories/$company/$reponame" -H "Content-Type: application/json" -d "{\"scm\": \"git\", \"is_private\": \"true\", \"fork_policy\": \"no_public_forks\", \"project\": {\"key\": \"$project_key\"}}"
	echo "${yellow}exiting...${reset}";
	echo ""
	echo ""
	echo ""
	echo ""

	exit 0
;;
esac

#
#
#  git init
#  git remote -v
#  git remote add origin "git@github.com:${user}/$reponame.git" // if need
#
#
echo ""
echo "${cyan}git ${white}init${reset}";
git init

echo ""
echo "${cyan}git ${white}remote ${yellow}-v${reset}";
git remote -v
output=$(git remote -v)

if [ -z "$output" ];
then	
	echo ""
	echo "${yellow}No remotes adding origin...${reset}"
	# echo "${cyan}git ${white}remote add origin ${yellow}\"git@bitbucket.org:arproduction/$reponame.git\"${reset}"
	# git remote add origin "git@bitbucket.org:arproduction/$reponame.git"
	echo "${cyan}git ${white}remote add origin ${yellow}\"https://${user}@github.com/${user}/$reponame.git\"${reset}"
	git remote add origin "https://${user}@github.com/$user/$reponame.git" 

else
	echo ""
	echo "${yellow}Remote exists...${reset}"
fi;


#
#
#  git commit -m message
#    
#
case $option in
1|3)
	echo "${yellow}Message for commit or 'n' to exit${reset}"
	read commitmessage;
	case $commitmessage in
		n)
		echo "${yellow}exiting...${reset}";
		echo ""
		echo ""
		echo ""
		echo ""
		exit 0
		;;
	esac

	echo ""
	echo "${cyan}git ${white}add ${red}. ${yellow}-v${reset}";
	git add . -v	

	echo ""
	echo "${cyan}git ${white}commit ${red}-m ${yellow}\"$commitmessage\"${reset}";
	git commit -m "$commitmessage"	
	;;
esac

#
#
# exit only commit
#
#
case $option in
1)
	echo "${yellow}exiting...${reset}";
	echo ""
	echo ""
	echo ""
	echo ""
	exit 0
	;;
esac

#
#
# git push -u origin master -v
#
#
case $option in 
2|3)
	echo ""
	echo "${cyan}git ${white}push ${yellow} ${white}origin main ${yellow}-v ${reset}";
	git push origin main -v
	;;
esac




echo ""
echo ""
echo ""
echo ""

